{"ast":null,"code":"// import \"firebase/auth\";\n// import { initializeApp } from \"firebase/app\";\n// import {\n//   getAuth,\n//   signInWithPopup,\n//   GoogleAuthProvider,\n//   signOut,\n//   updateProfile,\n//   FacebookAuthProvider,\n//   updateCurrentUser,\n// //   createUserWithEmailAndPassword,\n// //   signInWithEmailAndPassword\n// } from \"firebase/auth\";\n// import firebaseConfig from \"./firebase.config\";\n// export const initializeLoginFramework = () => {\n//   const app = initializeApp(firebaseConfig);\n// };\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app);\n// const googleProvider = new GoogleAuthProvider();\n// const fbProvider = new FacebookAuthProvider();\n// export const handleGoogleSignIn = () => {\n//   return signInWithPopup(auth, googleProvider)\n//     .then((res) => {\n//       const { displayName, email, photoURL } = res.user;\n//       const signedInUser = {\n//         isSignedIn: true,\n//         name: displayName,\n//         email: email,\n//         photo: photoURL,\n//         success:true\n//       };\n//       return signedInUser;\n//       console.log(displayName, email, photoURL);\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       console.log(err.message);\n//     });\n// };\n// export const handleFbSignIn = () => {\n//   const auth = getAuth(app);\n//   return signInWithPopup(auth, fbProvider)\n//     .then((result) => {\n//       // The signed-in user info.\n//       const user = result.user;\n//       user.success=true;\n//       return user;\n//       // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n//     //   const credential = FacebookAuthProvider.credentialFromResult(result);\n//     //   const accessToken = credential.accessToken;\n//     //   console.log(user);\n//       // ...\n//     })\n//     .catch((error) => {\n//       // Handle Errors here.\n//       const errorCode = error.code;\n//       const errorMessage = error.message;\n//       // The email of the user's account used.\n//       const email = error.email;\n//       // The AuthCredential type that was used.\n//       const credential = FacebookAuthProvider.credentialFromError(error);\n//       console.log(errorCode, errorMessage, email, credential);\n//       // ...\n//     });\n// };\n// export const handleSignOut = () => {\n//   return signOut(auth)\n//     .then((res) => {\n//       const signedOutUser = {\n//         isSignedIn: false,\n//         name: \"\",\n//         photo: \"\",\n//         email: \"\",\n//         error: \"\",\n//         success: false,\n//       };\n//       return signedOutUser;\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// }\n// export const createUserWithEmailAndPassword = (name,email,password) =>{\n//   const auth = getAuth();\n//   return createUserWithEmailAndPassword(email,password)\n//     .then(res => {\n//       const newUserInfo = res.user;\n//       newUserInfo.error ='';\n//       newUserInfo.success = true;\n//       updateUserName(name);\n//       return newUserInfo;\n//     })\n//     .catch((error) => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo = {};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       return newUserInfo;\n//       // ..\n//     });\n// };\n// export const signInWithEmailAndPassword = (email,password) => {\n//   return signInWithEmailAndPassword( email,password)\n//     .then((res) => {\n//     //   const user = res.user;\n//       const newUserInfo = res.user;\n//       newUserInfo.error = '';\n//       newUserInfo.success = true;\n//       return newUserInfo;\n//     })\n//     .catch((error) => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo = {};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       return newUserInfo;\n//     });\n// };\n// const updateUserName = (name) => {\n//   const auth = getAuth();\n//   updateCurrentUser(auth.currentUser, {\n//     displayName: name,\n//   })\n//     .then((res) => {\n//       console.log(\"update user name successfully\");\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// };\n// ================================================\nimport \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider } from \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nexport const initializeLoginFramework = () => {\n  const app = initializeApp(firebaseConfig);\n  const auth = getAuth(app);\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new GoogleAuthProvider();\n  const app = initializeApp(firebaseConfig);\n  const auth = getAuth(app);\n  signInWithPopup(auth, googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    setUser(signedInUser);\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/loginManager.js"],"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","FacebookAuthProvider","firebaseConfig","initializeLoginFramework","app","auth","handleGoogleSignIn","googleProvider","then","res","displayName","email","photoURL","user","signedInUser","isSignedIn","name","photo","setUser","console","log","catch","err","message"],"mappingseAAP;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAiBC,eAAjB,EAAiCC,kBAAjC,EAAoDC,OAApD,EAA4DC,0BAA5D,EAAuFC,8BAAvF,EAAuHC,aAAvH,EAAsIC,oBAAtI,QAAmK,eAAnK;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAGA,OAAO,MAAMC,wBAAwB,GAAG,MAAK;AACzC,QAAMC,GAAG,GAAGX,aAAa,CAACS,cAAD,CAAzB;AACA,QAAMG,IAAI,GAAGX,OAAO,CAACU,GAAD,CAApB;AACH,CAHM;AAMP,OAAO,MAAME,kBAAkB,GAAE,MAAI;AACjC,QAAMC,cAAc,GAAG,IAAIX,kBAAJ,EAAvB;AACA,QAAMQ,GAAG,GAAGX,aAAa,CAACS,cAAD,CAAzB;AACA,QAAMG,IAAI,GAAGX,OAAO,CAACU,GAAD,CAApB;AACAT,EAAAA,eAAe,CAACU,IAAD,EAAOE,cAAP,CAAf,CACCC,IADD,CACMC,GAAG,IAAI;AACX,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA,KAAb;AAAmBC,MAAAA;AAAnB,QAA6BH,GAAG,CAACI,IAAvC;AACA,UAAMC,YAAY,GAAE;AAClBC,MAAAA,UAAU,EAAC,IADO;AAElBC,MAAAA,IAAI,EAACN,WAFa;AAGlBC,MAAAA,KAAK,EAACA,KAHY;AAIlBM,MAAAA,KAAK,EAACL;AAJY,KAApB;AAMAM,IAAAA,OAAO,CAACJ,YAAD,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAAwBC,KAAxB,EAA8BC,QAA9B;AACD,GAXD,EAYCS,KAZD,CAYOC,GAAG,IAAG;AACXH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACD,GAfD;AAiBC,CArBE","sourcesContent":["// import \"firebase/auth\";\r\n// import { initializeApp } from \"firebase/app\";\r\n// import {\r\n//   getAuth,\r\n//   signInWithPopup,\r\n//   GoogleAuthProvider,\r\n//   signOut,\r\n//   updateProfile,\r\n//   FacebookAuthProvider,\r\n//   updateCurrentUser,\r\n// //   createUserWithEmailAndPassword,\r\n// //   signInWithEmailAndPassword\r\n// } from \"firebase/auth\";\r\n// import firebaseConfig from \"./firebase.config\";\r\n\r\n// export const initializeLoginFramework = () => {\r\n//   const app = initializeApp(firebaseConfig);\r\n// };\r\n// const app = initializeApp(firebaseConfig);\r\n// const auth = getAuth(app);\r\n// const googleProvider = new GoogleAuthProvider();\r\n// const fbProvider = new FacebookAuthProvider();\r\n\r\n\r\n\r\n// export const handleGoogleSignIn = () => {\r\n//   return signInWithPopup(auth, googleProvider)\r\n//     .then((res) => {\r\n//       const { displayName, email, photoURL } = res.user;\r\n//       const signedInUser = {\r\n//         isSignedIn: true,\r\n//         name: displayName,\r\n//         email: email,\r\n//         photo: photoURL,\r\n//         success:true\r\n//       };\r\n//       return signedInUser;\r\n//       console.log(displayName, email, photoURL);\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err);\r\n//       console.log(err.message);\r\n//     });\r\n// };\r\n\r\n// export const handleFbSignIn = () => {\r\n//   const auth = getAuth(app);\r\n//   return signInWithPopup(auth, fbProvider)\r\n//     .then((result) => {\r\n//       // The signed-in user info.\r\n//       const user = result.user;\r\n//       user.success=true;\r\n//       return user;\r\n\r\n//       // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n//     //   const credential = FacebookAuthProvider.credentialFromResult(result);\r\n//     //   const accessToken = credential.accessToken;\r\n//     //   console.log(user);\r\n\r\n//       // ...\r\n//     })\r\n//     .catch((error) => {\r\n//       // Handle Errors here.\r\n//       const errorCode = error.code;\r\n//       const errorMessage = error.message;\r\n//       // The email of the user's account used.\r\n//       const email = error.email;\r\n//       // The AuthCredential type that was used.\r\n//       const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n//       console.log(errorCode, errorMessage, email, credential);\r\n\r\n//       // ...\r\n//     });\r\n// };\r\n\r\n// export const handleSignOut = () => {\r\n//   return signOut(auth)\r\n//     .then((res) => {\r\n//       const signedOutUser = {\r\n//         isSignedIn: false,\r\n//         name: \"\",\r\n//         photo: \"\",\r\n//         email: \"\",\r\n//         error: \"\",\r\n//         success: false,\r\n//       };\r\n//       return signedOutUser;\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error);\r\n//     });\r\n// }\r\n\r\n// export const createUserWithEmailAndPassword = (name,email,password) =>{\r\n//   const auth = getAuth();\r\n//   return createUserWithEmailAndPassword(email,password)\r\n//     .then(res => {\r\n\r\n//       const newUserInfo = res.user;\r\n//       newUserInfo.error ='';\r\n//       newUserInfo.success = true;\r\n//       updateUserName(name);\r\n//       return newUserInfo;\r\n//     })\r\n//     .catch((error) => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo = {};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       return newUserInfo;\r\n//       // ..\r\n//     });\r\n// };\r\n\r\n// export const signInWithEmailAndPassword = (email,password) => {\r\n//   return signInWithEmailAndPassword( email,password)\r\n//     .then((res) => {\r\n//     //   const user = res.user;\r\n//       const newUserInfo = res.user;\r\n//       newUserInfo.error = '';\r\n//       newUserInfo.success = true;\r\n//       return newUserInfo;\r\n//     })\r\n//     .catch((error) => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo = {};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       return newUserInfo;\r\n//     });\r\n// };\r\n\r\n// const updateUserName = (name) => {\r\n//   const auth = getAuth();\r\n//   updateCurrentUser(auth.currentUser, {\r\n//     displayName: name,\r\n//   })\r\n//     .then((res) => {\r\n//       console.log(\"update user name successfully\");\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error);\r\n//     });\r\n// };\r\n\r\n// ================================================\r\n\r\nimport \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth,signInWithPopup,GoogleAuthProvider,signOut,signInWithEmailAndPassword,createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider  } from \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\n\r\nexport const initializeLoginFramework = () =>{\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth(app);\r\n}\r\n\r\n\r\nexport const handleGoogleSignIn =()=>{\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth(app);\r\n    signInWithPopup(auth, googleProvider)\r\n    .then(res => {\r\n      const {displayName,email,photoURL}=res.user;\r\n      const signedInUser ={\r\n        isSignedIn:true,\r\n        name:displayName,\r\n        email:email,\r\n        photo:photoURL\r\n      }\r\n      setUser(signedInUser);\r\n      console.log(displayName,email,photoURL);\r\n    })\r\n    .catch(err =>{ \r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n  \r\n    }\r\n  "]},"metadata":{},"sourceType":"module"}