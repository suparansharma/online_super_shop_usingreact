{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\React\\\\online_super_shop_usingreact\\\\src\\\\Component\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\n// import React, { useContext, useState } from 'react';\n// import * as firebase from 'firebase/app';\n// import { UserContext } from '../../App';\n// import { useHistory,useLocation } from 'react-router-dom';\n// import { handleFbSignIn, handleGoogleSignIn, handleSignOut, initializeLoginFramework,createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut} from './loginManager';\n// // import { createUserWithEmailAndPassword } from 'firebase/auth';\n// // import { signInWithEmailAndPassword } from 'firebase/auth';\n// function Login() {\n//   const [newUser,setNewUser]=useState(false);\n//   const [user,setUser] = useState({\n//     isSignedIn: false,\n//     name: '',\n//     email:'',\n//     password:'',\n//     photo:''\n//   })\n//   initializeLoginFramework();\n//   const [loggedInUser,setLoggedInUser] = useContext(UserContext);\n//   let history = useHistory();\n//   let location = useLocation();\n//   let { from } = location.state || { from: { pathname: \"/\" } };\n//  const googleSignIn =() =>{\n//   handleGoogleSignIn()\n//   .then(res =>{\n//     setUser(res)\n//     setLoggedInUser(res);\n//     history.replace(from);\n//   })\n//  }\n//  const fbSignIn = ()=>{\n//    handleFbSignIn()\n//    .then(res =>{\n//     setUser(res)\n//     setLoggedInUser(res);\n//     history.replace(from);\n//    })\n//  }\n//  const signOut = () =>{\n//    handleSignOut()\n//    .then(res =>{\n//      setUser(res);\n//      setLoggedInUser(res);\n//    })\n//  }\n//   const handleBlur =(e) =>{\n//     let isFieldValid = true;\n//     if(e.target.name ==='email'){\n//       isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n//     }\n//     if(e.target.name ==='password'){\n//       isFieldValid = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(e.target.value);\n//     }\n//     if(isFieldValid){\n//       const newUserInfo = {...user};\n//       newUserInfo[e.target.name] = e.target.value;\n//       setUser(newUserInfo);\n//     }\n//   }\n//   const handleSubmit =(e)=>{\n//     if(newUser && user.email && user.password){\n//       createUserWithEmailAndPassword(user.name,user.email,user.password)\n//       .then(res =>{\n//         setUser(res);\n//         setLoggedInUser(res);\n//         history.replace(from);\n//       })\n//     }\n//     if(!newUser && user.email && user.password){\n//       signInWithEmailAndPassword(user.email,user.password)\n//       .then(res =>{\n//         setUser(res);\n//         setLoggedInUser(res);\n//         history.replace(from);\n//       })\n//     }\n//     e.preventDefault();\n//   }\n//   return (\n//    <div>\n//      {\n//        user.isSignedIn ?<button onClick={signOut} >SignOut</button> :\n//        <button onClick={googleSignIn} >SignIn</button>\n//     }\n//     <br />\n//     <button onClick={fbSignIn}>Sign In With Facebook</button>\n//      {\n//        user.isSignedIn && <div>\n//          <p>Welcome,{user.name}</p>\n//          <p>Your email:{user.email}</p>\n//          <img src={user.photo} alt=\"\" srcset=\"\" />\n//       </div>\n//      }\n//      <div>\n//        {/* <h1>Our own Authentication</h1>\n//        <p>Name:{user.name}</p>\n//        <p>Email:{user.email}</p>\n//        <p>Password:{user.password}</p> */}\n//        <input type=\"checkbox\" onChange={()=>setNewUser(!newUser)} name=\"\" id=\"\" />\n//        <form onSubmit={handleSubmit}>\n//         {newUser && <input type=\"text\" name=\"name\" id=\"\" onBlur={handleBlur} placeholder='input your name' required />}\n//          <br />\n//          <input type=\"text\" name=\"email\" id=\"\" onBlur={handleBlur} placeholder='input your email address' required/>\n//          <br />\n//          <input type=\"password\" name=\"password\" onChange={handleBlur} id=\"\" placeholder='a-zA-Z0-9!@#$%^&* ' required />\n//          <br />\n//          <input type=\"submit\" value={newUser ? 'Sign In' :'Sign Up  '} />\n//        </form>\n//        <p style={{ color:'red' }}>{user.error}</p>\n//        {user.success && <p style={{ color:'green' }}>User {newUser ? \"Created\" : \"Logged In\"} Successfully</p>}\n//      </div>\n//    </div>\n//   );\n// }\n// export default Login;\n// ============================================================================================================\n// import React, { useState } from 'react';\n// import * as firebase from 'firebase/app';\n// import \"firebase/auth\";\n// import { initializeApp } from \"firebase/app\";\n// import { getAuth,signInWithPopup,GoogleAuthProvider,signOut,signInWithEmailAndPassword,createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider  } from \"firebase/auth\";\n// import firebaseConfig from './firebase.config';\n// import { UserContext } from './../../App';\n// import { useContext } from 'react';\n// import { useHistory } from 'react-router-dom';\n// import { useLocation } from 'react-router-dom';\n// function Login() {\n//   const [newUser,setNewUser]=useState(false);\n//   const [user,setUser] = useState({\n//     isSignedIn: false,\n//     name: '',\n//     email:'',\n//     password:'',\n//     photo:''\n//   });\n//   const [loggedInUser,setLoggedInUser] = useContext(UserContext);\n//   const history= useHistory();\n//   const location = useLocation();\n//   let { from } = location.state || { from: { pathname: \"/\" } };\n//   const app = initializeApp(firebaseConfig);\n//   const auth = getAuth(app);\n//   const googleProvider = new GoogleAuthProvider();\n//   const fbProvider = new FacebookAuthProvider();\n//   const handleGoogleSignIn =()=>{\n//   signInWithPopup(auth, googleProvider)\n//   .then(res => {\n//     const {displayName,email,photoURL}=res.user;\n//     const signedInUser ={\n//       isSignedIn:true,\n//       name:displayName,\n//       email:email,\n//       photo:photoURL\n//     }\n//     setUser(signedInUser);\n//     console.log(displayName,email,photoURL);\n//   })\n//   .catch(err =>{ \n//     console.log(err);\n//     console.log(err.message);\n//   })\n//   }\n//   const handleSignOut =()=>{\n//     signOut(auth).then(res => {\n//       const signedOutUser = {\n//         isSignedIn:false,\n//         name:'',\n//         photo:'',\n//         email:'',\n//         error:'',\n//         success:false\n//       }\n//       setUser(signedOutUser);\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n//   }\n//   const handleFbSignIn =() =>{\n//     const auth = getAuth(app);\n//     signInWithPopup(auth, fbProvider)\n//   .then((result) => {\n//     // The signed-in user info.\n//     const user = result.user;\n//     // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n//     const credential = FacebookAuthProvider.credentialFromResult(result);\n//     const accessToken = credential.accessToken;\n//     console.log(user);\n//     // ...\n//   })\n//   .catch((error) => {\n//     // Handle Errors here.\n//     const errorCode = error.code;\n//     const errorMessage = error.message;\n//     // The email of the user's account used.\n//     const email = error.email;\n//     // The AuthCredential type that was used.\n//     const credential = FacebookAuthProvider.credentialFromError(error);\n//     console.log(errorCode,errorMessage,email,credential);\n//     // ...\n//   });\n//   }\n//   const handleBlur =(e) =>{\n//     let isFieldValid = true;\n//     if(e.target.name ==='email'){\n//       isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n//     }\n//     if(e.target.name ==='password'){\n//       isFieldValid = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(e.target.value);\n//     }\n//     if(isFieldValid){\n//       const newUserInfo = {...user};\n//       newUserInfo[e.target.name] = e.target.value;\n//       setUser(newUserInfo);\n//     }\n//   }\n//   const handleSubmit =(e)=>{\n//     if(newUser && user.email && user.password){\n//       console.log(user.email,user.password,\"subbmit\");\n//       const auth = getAuth();\n//       createUserWithEmailAndPassword(auth,user.email, user.password)\n//   .then(res => {\n//     const user = res.user;\n//     console.log(res);\n//     const newUserInfo ={...user};\n//     newUserInfo.error = '';\n//     newUserInfo.success = true;\n//     setUser(newUserInfo);\n//     updateUserName(user.name);\n//   })\n//   .catch(error => {\n//     // const errorCode = error.code;\n//     // const errorMessage = error.message;\n//     // console.log(errorCode,errorMessage);\n//     const newUserInfo ={...user};\n//     newUserInfo.error = error.message;\n//     newUserInfo.success = false;\n//     setUser(newUserInfo);\n//     // ..\n//   });\n//     }\n//     if(!newUser && user.email && user.password){\n//       signInWithEmailAndPassword(auth, user.email, user.password)\n//       .then(res => {\n//         const user = res.user;\n//         console.log(res);\n//         const newUserInfo ={...user};\n//         newUserInfo.error = '';\n//         newUserInfo.success = true;\n//         setUser(newUserInfo);\n//         setLoggedInUser(newUserInfo);\n//         history.replace(from);\n//         console.log('sing is user info',res.user);\n//       })\n//       .catch(error => {\n//         // const errorCode = error.code;\n//         // const errorMessage = error.message;\n//         // console.log(errorCode,errorMessage);\n//         const newUserInfo ={...user};\n//         newUserInfo.error = error.message;\n//         newUserInfo.success = false;\n//         setUser(newUserInfo);\n//       });\n//     }\n//     e.preventDefault();\n//   }\n//   const updateUserName =name =>{\n//     const auth = getAuth();\n//     updateProfile(auth.currentUser, {\n//     displayName: name\n//     }).then(res => {\n//       console.log(\"update user name successfully\")\n//     }).catch((error) => {\n//       console.log(error)\n//     });\n//   }\n//   return (\n//    <div style={{textAlign:'center'  }}>\n//      {\n//        user.isSignedIn ?<button onClick={handleSignOut} >SignOut</button> :\n//        <button onClick={handleGoogleSignIn} >SignIn</button>\n//     }\n//     <br />\n//     <button onClick={handleFbSignIn}>Sign In With Facebook</button>\n//      {\n//        user.isSignedIn && <div>\n//          <p>Welcome,{user.name}</p>\n//          <p>Your email:{user.email}</p>\n//          <img src={user.photo} alt=\"\" srcset=\"\" />\n//       </div>\n//      }\n//      <div>\n//        {/* <h1>Our own Authentication</h1>\n//        <p>Name:{user.name}</p>\n//        <p>Email:{user.email}</p>\n//        <p>Password:{user.password}</p> */}\n//        <input type=\"checkbox\" onChange={()=>setNewUser(!newUser)} name=\"\" id=\"\" />\n//        <form onSubmit={handleSubmit}>\n//         {newUser && <input type=\"text\" name=\"name\" id=\"\" onBlur={handleBlur} placeholder='input your name' required />}\n//          <br />\n//          <input type=\"text\" name=\"email\" id=\"\" onBlur={handleBlur} placeholder='input your email address' required/>\n//          <br />\n//          <input type=\"password\" name=\"password\" onChange={handleBlur} id=\"\" placeholder='a-zA-Z0-9!@#$%^&* ' required />\n//          <br />\n//          <input type=\"submit\" value={newUser ? 'Sign In' :'Sign Up  '} />\n//        </form>\n//        <p style={{ color:'red' }}>{user.error}</p>\n//        {user.success && <p style={{ color:'green' }}>User {newUser ? \"Created\" : \"Logged In\"} Successfully</p>}\n//      </div>\n//    </div>\n//   );\n// }\n// export default Login;\n// -------------------------------------------\nimport React, { useState } from 'react';\nimport * as firebase from 'firebase/app';\nimport { UserContext } from './../../App';\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [newUser, setNewUser] = useState(false);\n  const [user, setUser] = useState({\n    isSignedIn: false,\n    name: '',\n    email: '',\n    password: '',\n    photo: ''\n  });\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n  const googleProvider = new GoogleAuthProvider();\n  const fbProvider = new FacebookAuthProvider();\n\n  const handleGoogleSignIn = () => {\n    signInWithPopup(auth, googleProvider).then(res => {\n      const {\n        displayName,\n        email,\n        photoURL\n      } = res.user;\n      const signedInUser = {\n        isSignedIn: true,\n        name: displayName,\n        email: email,\n        photo: photoURL\n      };\n      setUser(signedInUser);\n      console.log(displayName, email, photoURL);\n    }).catch(err => {\n      console.log(err);\n      console.log(err.message);\n    });\n  };\n\n  const handleSignOut = () => {\n    signOut(auth).then(res => {\n      const signedOutUser = {\n        isSignedIn: false,\n        name: '',\n        photo: '',\n        email: '',\n        error: '',\n        success: false\n      };\n      setUser(signedOutUser);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleFbSignIn = () => {\n    const auth = getAuth(app);\n    signInWithPopup(auth, fbProvider).then(result => {\n      // The signed-in user info.\n      const user = result.user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n      const credential = FacebookAuthProvider.credentialFromResult(result);\n      const accessToken = credential.accessToken;\n      console.log(user); // ...\n    }).catch(error => {\n      // Handle Errors here.\n      const errorCode = error.code;\n      const errorMessage = error.message; // The email of the user's account used.\n\n      const email = error.email; // The AuthCredential type that was used.\n\n      const credential = FacebookAuthProvider.credentialFromError(error);\n      console.log(errorCode, errorMessage, email, credential); // ...\n    });\n  };\n\n  const handleBlur = e => {\n    let isFieldValid = true;\n\n    if (e.target.name === 'email') {\n      isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n    }\n\n    if (e.target.name === 'password') {\n      isFieldValid = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(e.target.value);\n    }\n\n    if (isFieldValid) {\n      const newUserInfo = { ...user\n      };\n      newUserInfo[e.target.name] = e.target.value;\n      setUser(newUserInfo);\n    }\n  };\n\n  const handleSubmit = e => {\n    if (newUser && user.email && user.password) {\n      console.log(user.email, user.password, \"subbmit\");\n      const auth = getAuth();\n      createUserWithEmailAndPassword(auth, user.email, user.password).then(res => {\n        const user = res.user;\n        console.log(res);\n        const newUserInfo = { ...user\n        };\n        newUserInfo.error = '';\n        newUserInfo.success = true;\n        setUser(newUserInfo);\n        updateUserName(user.name);\n      }).catch(error => {\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        // console.log(errorCode,errorMessage);\n        const newUserInfo = { ...user\n        };\n        newUserInfo.error = error.message;\n        newUserInfo.success = false;\n        setUser(newUserInfo); // ..\n      });\n    }\n\n    if (!newUser && user.email && user.password) {\n      signInWithEmailAndPassword(auth, user.email, user.password).then(res => {\n        const user = res.user;\n        console.log(res);\n        const newUserInfo = { ...user\n        };\n        newUserInfo.error = '';\n        newUserInfo.success = true;\n        setUser(newUserInfo);\n        setLoggedInUser(newUserInfo);\n        history.replace(from);\n        console.log('sing is user info', res.user);\n      }).catch(error => {\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        // console.log(errorCode,errorMessage);\n        const newUserInfo = { ...user\n        };\n        newUserInfo.error = error.message;\n        newUserInfo.success = false;\n        setUser(newUserInfo);\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  const updateUserName = name => {\n    const auth = getAuth();\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(res => {\n      console.log(\"update user name successfully\");\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [user.isSignedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignOut,\n      children: \"SignOut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleSignIn,\n      children: \"SignIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFbSignIn,\n      children: \"Sign In With Facebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 5\n    }, this), user.isSignedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Welcome,\", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your email:\", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photo,\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => setNewUser(!newUser),\n        name: \"\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [newUser && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"\",\n          onBlur: handleBlur,\n          placeholder: \"input your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          id: \"\",\n          onBlur: handleBlur,\n          placeholder: \"input your email address\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleBlur,\n          id: \"\",\n          placeholder: \"a-zA-Z0-9!@#$%^&* \",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: newUser ? 'Sign In' : 'Sign Up  '\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: user.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 8\n      }, this), user.success && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: [\"User \", newUser ? \"Created\" : \"Logged In\", \" Successfully\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 582,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Login, \"dBg+eLK3hzjEPGZokfzdE2uxxUM=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/Login.js"],"names":["React","useState","firebase","UserContext","useContext","useHistory","useLocation","Login","newUser","setNewUser","user","setUser","isSignedIn","name","email","password","photo","loggedInUser","setLoggedInUser","history","location","from","state","pathname","googleProvider","GoogleAuthProvider","fbProvider","FacebookAuthProvider","handleGoogleSignIn","signInWithPopup","auth","then","res","displayName","photoURL","signedInUser","console","log","catch","err","message","handleSignOut","signOut","signedOutUser","error","success","handleFbSignIn","getAuth","app","result","credential","credentialFromResult","accessToken","errorCode","code","errorMessage","credentialFromError","handleBlur","e","isFieldValid","target","test","value","newUserInfo","handleSubmit","createUserWithEmailAndPassword","updateUserName","signInWithEmailAndPassword","replace","preventDefault","updateProfile","currentUser","textAlign","color"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","sourcesContent":["// import React, { useContext, useState } from 'react';\r\n// import * as firebase from 'firebase/app';\r\n\r\n// import { UserContext } from '../../App';\r\n// import { useHistory,useLocation } from 'react-router-dom';\r\n// import { handleFbSignIn, handleGoogleSignIn, handleSignOut, initializeLoginFramework,createUserWithEmailAndPassword,signInWithEmailAndPassword,signOut} from './loginManager';\r\n\r\n// // import { createUserWithEmailAndPassword } from 'firebase/auth';\r\n// // import { signInWithEmailAndPassword } from 'firebase/auth';\r\n\r\n\r\n\r\n// function Login() {\r\n//   const [newUser,setNewUser]=useState(false);\r\n//   const [user,setUser] = useState({\r\n//     isSignedIn: false,\r\n//     name: '',\r\n//     email:'',\r\n//     password:'',\r\n//     photo:''\r\n\r\n//   })\r\n\r\n//   initializeLoginFramework();\r\n//   const [loggedInUser,setLoggedInUser] = useContext(UserContext);\r\n//   let history = useHistory();\r\n//   let location = useLocation();\r\n//   let { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n//  const googleSignIn =() =>{\r\n\r\n//   handleGoogleSignIn()\r\n//   .then(res =>{\r\n//     setUser(res)\r\n//     setLoggedInUser(res);\r\n//     history.replace(from);\r\n//   })\r\n//  }\r\n\r\n//  const fbSignIn = ()=>{\r\n//    handleFbSignIn()\r\n//    .then(res =>{\r\n//     setUser(res)\r\n//     setLoggedInUser(res);\r\n//     history.replace(from);\r\n//    })\r\n//  }\r\n\r\n\r\n\r\n\r\n\r\n//  const signOut = () =>{\r\n//    handleSignOut()\r\n//    .then(res =>{\r\n//      setUser(res);\r\n//      setLoggedInUser(res);\r\n//    })\r\n//  }\r\n\r\n\r\n\r\n\r\n\r\n//   const handleBlur =(e) =>{\r\n//     let isFieldValid = true;\r\n\r\n//     if(e.target.name ==='email'){\r\n//       isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n      \r\n//     }\r\n//     if(e.target.name ==='password'){\r\n\r\n//       isFieldValid = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(e.target.value);\r\n//     }\r\n//     if(isFieldValid){\r\n//       const newUserInfo = {...user};\r\n//       newUserInfo[e.target.name] = e.target.value;\r\n//       setUser(newUserInfo);\r\n//     }\r\n//   }\r\n\r\n//   const handleSubmit =(e)=>{\r\n    \r\n//     if(newUser && user.email && user.password){\r\n//       createUserWithEmailAndPassword(user.name,user.email,user.password)\r\n//       .then(res =>{\r\n//         setUser(res);\r\n//         setLoggedInUser(res);\r\n//         history.replace(from);\r\n//       })\r\n//     }\r\n\r\n//     if(!newUser && user.email && user.password){\r\n//       signInWithEmailAndPassword(user.email,user.password)\r\n//       .then(res =>{\r\n//         setUser(res);\r\n//         setLoggedInUser(res);\r\n//         history.replace(from);\r\n//       })\r\n//     }\r\n//     e.preventDefault();\r\n//   }\r\n\r\n\r\n\r\n//   return (\r\n//    <div>\r\n//      {\r\n//        user.isSignedIn ?<button onClick={signOut} >SignOut</button> :\r\n//        <button onClick={googleSignIn} >SignIn</button>\r\n\r\n//     }\r\n\r\n//     <br />\r\n//     <button onClick={fbSignIn}>Sign In With Facebook</button>\r\n\r\n//      {\r\n//        user.isSignedIn && <div>\r\n//          <p>Welcome,{user.name}</p>\r\n//          <p>Your email:{user.email}</p>\r\n//          <img src={user.photo} alt=\"\" srcset=\"\" />\r\n//       </div>\r\n//      }\r\n\r\n//      <div>\r\n//        {/* <h1>Our own Authentication</h1>\r\n//        <p>Name:{user.name}</p>\r\n//        <p>Email:{user.email}</p>\r\n//        <p>Password:{user.password}</p> */}\r\n//        <input type=\"checkbox\" onChange={()=>setNewUser(!newUser)} name=\"\" id=\"\" />\r\n//        <form onSubmit={handleSubmit}>\r\n//         {newUser && <input type=\"text\" name=\"name\" id=\"\" onBlur={handleBlur} placeholder='input your name' required />}\r\n//          <br />\r\n//          <input type=\"text\" name=\"email\" id=\"\" onBlur={handleBlur} placeholder='input your email address' required/>\r\n//          <br />\r\n//          <input type=\"password\" name=\"password\" onChange={handleBlur} id=\"\" placeholder='a-zA-Z0-9!@#$%^&* ' required />\r\n//          <br />\r\n//          <input type=\"submit\" value={newUser ? 'Sign In' :'Sign Up  '} />\r\n//        </form>\r\n\r\n//        <p style={{ color:'red' }}>{user.error}</p>\r\n//        {user.success && <p style={{ color:'green' }}>User {newUser ? \"Created\" : \"Logged In\"} Successfully</p>}\r\n//      </div>\r\n//    </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n// ============================================================================================================\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import * as firebase from 'firebase/app';\r\n// import \"firebase/auth\";\r\n// import { initializeApp } from \"firebase/app\";\r\n// import { getAuth,signInWithPopup,GoogleAuthProvider,signOut,signInWithEmailAndPassword,createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider  } from \"firebase/auth\";\r\n// import firebaseConfig from './firebase.config';\r\n// import { UserContext } from './../../App';\r\n// import { useContext } from 'react';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\n// function Login() {\r\n//   const [newUser,setNewUser]=useState(false);\r\n//   const [user,setUser] = useState({\r\n//     isSignedIn: false,\r\n//     name: '',\r\n//     email:'',\r\n//     password:'',\r\n//     photo:''\r\n\r\n//   });\r\n\r\n//   const [loggedInUser,setLoggedInUser] = useContext(UserContext);\r\n//   const history= useHistory();\r\n//   const location = useLocation();\r\n\r\n\r\n//   let { from } = location.state || { from: { pathname: \"/\" } };\r\n//   const app = initializeApp(firebaseConfig);\r\n//   const auth = getAuth(app);\r\n//   const googleProvider = new GoogleAuthProvider();\r\n//   const fbProvider = new FacebookAuthProvider();\r\n//   const handleGoogleSignIn =()=>{\r\n//   signInWithPopup(auth, googleProvider)\r\n//   .then(res => {\r\n//     const {displayName,email,photoURL}=res.user;\r\n//     const signedInUser ={\r\n//       isSignedIn:true,\r\n//       name:displayName,\r\n//       email:email,\r\n//       photo:photoURL\r\n//     }\r\n//     setUser(signedInUser);\r\n//     console.log(displayName,email,photoURL);\r\n//   })\r\n//   .catch(err =>{ \r\n//     console.log(err);\r\n//     console.log(err.message);\r\n//   })\r\n\r\n//   }\r\n\r\n//   const handleSignOut =()=>{\r\n//     signOut(auth).then(res => {\r\n//       const signedOutUser = {\r\n//         isSignedIn:false,\r\n//         name:'',\r\n//         photo:'',\r\n//         email:'',\r\n//         error:'',\r\n//         success:false\r\n\r\n//       }\r\n//       setUser(signedOutUser);\r\n      \r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error);\r\n//     });\r\n//   }\r\n\r\n//   const handleFbSignIn =() =>{\r\n//     const auth = getAuth(app);\r\n//     signInWithPopup(auth, fbProvider)\r\n//   .then((result) => {\r\n//     // The signed-in user info.\r\n//     const user = result.user;\r\n    \r\n//     // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n//     const credential = FacebookAuthProvider.credentialFromResult(result);\r\n//     const accessToken = credential.accessToken;\r\n//     console.log(user);\r\n\r\n//     // ...\r\n//   })\r\n//   .catch((error) => {\r\n//     // Handle Errors here.\r\n//     const errorCode = error.code;\r\n//     const errorMessage = error.message;\r\n//     // The email of the user's account used.\r\n//     const email = error.email;\r\n//     // The AuthCredential type that was used.\r\n//     const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n//     console.log(errorCode,errorMessage,email,credential);\r\n\r\n//     // ...\r\n//   });\r\n\r\n//   }\r\n\r\n\r\n\r\n\r\n//   const handleBlur =(e) =>{\r\n//     let isFieldValid = true;\r\n\r\n//     if(e.target.name ==='email'){\r\n//       isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n      \r\n//     }\r\n//     if(e.target.name ==='password'){\r\n\r\n//       isFieldValid = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(e.target.value);\r\n//     }\r\n//     if(isFieldValid){\r\n//       const newUserInfo = {...user};\r\n//       newUserInfo[e.target.name] = e.target.value;\r\n//       setUser(newUserInfo);\r\n//     }\r\n//   }\r\n\r\n//   const handleSubmit =(e)=>{\r\n    \r\n//     if(newUser && user.email && user.password){\r\n//       console.log(user.email,user.password,\"subbmit\");\r\n//       const auth = getAuth();\r\n//       createUserWithEmailAndPassword(auth,user.email, user.password)\r\n//   .then(res => {\r\n//     const user = res.user;\r\n//     console.log(res);\r\n//     const newUserInfo ={...user};\r\n//     newUserInfo.error = '';\r\n//     newUserInfo.success = true;\r\n//     setUser(newUserInfo);\r\n//     updateUserName(user.name);\r\n//   })\r\n//   .catch(error => {\r\n//     // const errorCode = error.code;\r\n//     // const errorMessage = error.message;\r\n//     // console.log(errorCode,errorMessage);\r\n//     const newUserInfo ={...user};\r\n//     newUserInfo.error = error.message;\r\n//     newUserInfo.success = false;\r\n//     setUser(newUserInfo);\r\n//     // ..\r\n//   });\r\n//     }\r\n\r\n//     if(!newUser && user.email && user.password){\r\n//       signInWithEmailAndPassword(auth, user.email, user.password)\r\n//       .then(res => {\r\n//         const user = res.user;\r\n//         console.log(res);\r\n//         const newUserInfo ={...user};\r\n//         newUserInfo.error = '';\r\n//         newUserInfo.success = true;\r\n//         setUser(newUserInfo);\r\n//         setLoggedInUser(newUserInfo);\r\n//         history.replace(from);\r\n//         console.log('sing is user info',res.user);\r\n//       })\r\n//       .catch(error => {\r\n//         // const errorCode = error.code;\r\n//         // const errorMessage = error.message;\r\n//         // console.log(errorCode,errorMessage);\r\n//         const newUserInfo ={...user};\r\n//         newUserInfo.error = error.message;\r\n//         newUserInfo.success = false;\r\n//         setUser(newUserInfo);\r\n        \r\n//       });\r\n//     }\r\n//     e.preventDefault();\r\n//   }\r\n\r\n//   const updateUserName =name =>{\r\n//     const auth = getAuth();\r\n//     updateProfile(auth.currentUser, {\r\n//     displayName: name\r\n//     }).then(res => {\r\n//       console.log(\"update user name successfully\")\r\n//     }).catch((error) => {\r\n//       console.log(error)\r\n//     });\r\n//   }\r\n\r\n//   return (\r\n//    <div style={{textAlign:'center'  }}>\r\n//      {\r\n//        user.isSignedIn ?<button onClick={handleSignOut} >SignOut</button> :\r\n//        <button onClick={handleGoogleSignIn} >SignIn</button>\r\n\r\n//     }\r\n\r\n//     <br />\r\n//     <button onClick={handleFbSignIn}>Sign In With Facebook</button>\r\n\r\n//      {\r\n//        user.isSignedIn && <div>\r\n//          <p>Welcome,{user.name}</p>\r\n//          <p>Your email:{user.email}</p>\r\n//          <img src={user.photo} alt=\"\" srcset=\"\" />\r\n//       </div>\r\n//      }\r\n\r\n//      <div>\r\n//        {/* <h1>Our own Authentication</h1>\r\n//        <p>Name:{user.name}</p>\r\n//        <p>Email:{user.email}</p>\r\n//        <p>Password:{user.password}</p> */}\r\n//        <input type=\"checkbox\" onChange={()=>setNewUser(!newUser)} name=\"\" id=\"\" />\r\n//        <form onSubmit={handleSubmit}>\r\n//         {newUser && <input type=\"text\" name=\"name\" id=\"\" onBlur={handleBlur} placeholder='input your name' required />}\r\n//          <br />\r\n//          <input type=\"text\" name=\"email\" id=\"\" onBlur={handleBlur} placeholder='input your email address' required/>\r\n//          <br />\r\n//          <input type=\"password\" name=\"password\" onChange={handleBlur} id=\"\" placeholder='a-zA-Z0-9!@#$%^&* ' required />\r\n//          <br />\r\n//          <input type=\"submit\" value={newUser ? 'Sign In' :'Sign Up  '} />\r\n//        </form>\r\n\r\n//        <p style={{ color:'red' }}>{user.error}</p>\r\n//        {user.success && <p style={{ color:'green' }}>User {newUser ? \"Created\" : \"Logged In\"} Successfully</p>}\r\n//      </div>\r\n//    </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// -------------------------------------------\r\nimport React, { useState } from 'react';\r\nimport * as firebase from 'firebase/app';\r\n\r\nimport { UserContext } from './../../App';\r\nimport { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction Login() {\r\n  const [newUser,setNewUser]=useState(false);\r\n  const [user,setUser] = useState({\r\n    isSignedIn: false,\r\n    name: '',\r\n    email:'',\r\n    password:'',\r\n    photo:''\r\n\r\n  });\r\n\r\n  const [loggedInUser,setLoggedInUser] = useContext(UserContext);\r\n  const history= useHistory();\r\n  const location = useLocation();\r\n\r\n\r\n  let { from } = location.state || { from: { pathname: \"/\" } };\r\n \r\n  const googleProvider = new GoogleAuthProvider();\r\n  const fbProvider = new FacebookAuthProvider();\r\n  const handleGoogleSignIn =()=>{\r\n  signInWithPopup(auth, googleProvider)\r\n  .then(res => {\r\n    const {displayName,email,photoURL}=res.user;\r\n    const signedInUser ={\r\n      isSignedIn:true,\r\n      name:displayName,\r\n      email:email,\r\n      photo:photoURL\r\n    }\r\n    setUser(signedInUser);\r\n    console.log(displayName,email,photoURL);\r\n  })\r\n  .catch(err =>{ \r\n    console.log(err);\r\n    console.log(err.message);\r\n  })\r\n\r\n  }\r\n\r\n  const handleSignOut =()=>{\r\n    signOut(auth).then(res => {\r\n      const signedOutUser = {\r\n        isSignedIn:false,\r\n        name:'',\r\n        photo:'',\r\n        email:'',\r\n        error:'',\r\n        success:false\r\n\r\n      }\r\n      setUser(signedOutUser);\r\n      \r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const handleFbSignIn =() =>{\r\n    const auth = getAuth(app);\r\n    signInWithPopup(auth, fbProvider)\r\n  .then((result) => {\r\n    // The signed-in user info.\r\n    const user = result.user;\r\n    \r\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n    const credential = FacebookAuthProvider.credentialFromResult(result);\r\n    const accessToken = credential.accessToken;\r\n    console.log(user);\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The AuthCredential type that was used.\r\n    const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n    console.log(errorCode,errorMessage,email,credential);\r\n\r\n    // ...\r\n  });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  const handleBlur =(e) =>{\r\n    let isFieldValid = true;\r\n\r\n    if(e.target.name ==='email'){\r\n      isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n      \r\n    }\r\n    if(e.target.name ==='password'){\r\n\r\n      isFieldValid = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/.test(e.target.value);\r\n    }\r\n    if(isFieldValid){\r\n      const newUserInfo = {...user};\r\n      newUserInfo[e.target.name] = e.target.value;\r\n      setUser(newUserInfo);\r\n    }\r\n  }\r\n\r\n  const handleSubmit =(e)=>{\r\n    \r\n    if(newUser && user.email && user.password){\r\n      console.log(user.email,user.password,\"subbmit\");\r\n      const auth = getAuth();\r\n      createUserWithEmailAndPassword(auth,user.email, user.password)\r\n  .then(res => {\r\n    const user = res.user;\r\n    console.log(res);\r\n    const newUserInfo ={...user};\r\n    newUserInfo.error = '';\r\n    newUserInfo.success = true;\r\n    setUser(newUserInfo);\r\n    updateUserName(user.name);\r\n  })\r\n  .catch(error => {\r\n    // const errorCode = error.code;\r\n    // const errorMessage = error.message;\r\n    // console.log(errorCode,errorMessage);\r\n    const newUserInfo ={...user};\r\n    newUserInfo.error = error.message;\r\n    newUserInfo.success = false;\r\n    setUser(newUserInfo);\r\n    // ..\r\n  });\r\n    }\r\n\r\n    if(!newUser && user.email && user.password){\r\n      signInWithEmailAndPassword(auth, user.email, user.password)\r\n      .then(res => {\r\n        const user = res.user;\r\n        console.log(res);\r\n        const newUserInfo ={...user};\r\n        newUserInfo.error = '';\r\n        newUserInfo.success = true;\r\n        setUser(newUserInfo);\r\n        setLoggedInUser(newUserInfo);\r\n        history.replace(from);\r\n        console.log('sing is user info',res.user);\r\n      })\r\n      .catch(error => {\r\n        // const errorCode = error.code;\r\n        // const errorMessage = error.message;\r\n        // console.log(errorCode,errorMessage);\r\n        const newUserInfo ={...user};\r\n        newUserInfo.error = error.message;\r\n        newUserInfo.success = false;\r\n        setUser(newUserInfo);\r\n        \r\n      });\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  const updateUserName =name =>{\r\n    const auth = getAuth();\r\n    updateProfile(auth.currentUser, {\r\n    displayName: name\r\n    }).then(res => {\r\n      console.log(\"update user name successfully\")\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    });\r\n  }\r\n\r\n  return (\r\n   <div style={{textAlign:'center'  }}>\r\n     {\r\n       user.isSignedIn ?<button onClick={handleSignOut} >SignOut</button> :\r\n       <button onClick={handleGoogleSignIn} >SignIn</button>\r\n\r\n    }\r\n\r\n    <br />\r\n    <button onClick={handleFbSignIn}>Sign In With Facebook</button>\r\n\r\n     {\r\n       user.isSignedIn && <div>\r\n         <p>Welcome,{user.name}</p>\r\n         <p>Your email:{user.email}</p>\r\n         <img src={user.photo} alt=\"\" srcset=\"\" />\r\n      </div>\r\n     }\r\n\r\n     <div>\r\n       {/* <h1>Our own Authentication</h1>\r\n       <p>Name:{user.name}</p>\r\n       <p>Email:{user.email}</p>\r\n       <p>Password:{user.password}</p> */}\r\n       <input type=\"checkbox\" onChange={()=>setNewUser(!newUser)} name=\"\" id=\"\" />\r\n       <form onSubmit={handleSubmit}>\r\n        {newUser && <input type=\"text\" name=\"name\" id=\"\" onBlur={handleBlur} placeholder='input your name' required />}\r\n         <br />\r\n         <input type=\"text\" name=\"email\" id=\"\" onBlur={handleBlur} placeholder='input your email address' required/>\r\n         <br />\r\n         <input type=\"password\" name=\"password\" onChange={handleBlur} id=\"\" placeholder='a-zA-Z0-9!@#$%^&* ' required />\r\n         <br />\r\n         <input type=\"submit\" value={newUser ? 'Sign In' :'Sign Up  '} />\r\n       </form>\r\n\r\n       <p style={{ color:'red' }}>{user.error}</p>\r\n       {user.success && <p style={{ color:'green' }}>User {newUser ? \"Created\" : \"Logged In\"} Successfully</p>}\r\n     </div>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}