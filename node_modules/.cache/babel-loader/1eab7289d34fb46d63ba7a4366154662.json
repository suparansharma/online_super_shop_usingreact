{"ast":null,"code":"import \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider } from \"firebase/auth\";\nimport firebaseConfig from \"./firebase.config\";\nexport const initializeLoginFramework = () => {\n  const app = initializeApp(firebaseConfig);\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\nconst fbProvider = new FacebookAuthProvider();\nexport const handleGoogleSignIn = () => {\n  return signInWithPopup(auth, googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL,\n      success: true\n    };\n    return signedInUser;\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  const auth = getAuth(app);\n  return signInWithPopup(auth, fbProvider).then(result => {\n    // The signed-in user info.\n    const user = result.user;\n    user.success = true;\n    return user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    const accessToken = credential.accessToken;\n    console.log(user); // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    console.log(errorCode, errorMessage, email, credential); // ...\n  });\n};\nexport const handleSignOut = () => {\n  return signOut(auth).then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: \"\",\n      photo: \"\",\n      email: \"\",\n      error: \"\",\n      success: false\n    };\n    return signedOutUser;\n  }).catch(error => {\n    console.log(error);\n  });\n}; // export const createUserWithEmailAndPassword = (name,email,password) => {\n//   console.log(user.email, user.password, \"subbmit\");\n//   const auth = getAuth();\n//   return createUserWithEmailAndPassword(auth, email,password)\n//     .then((res) => {\n//       const user = res.user;\n//       console.log(res);\n//       const newUserInfo = { ...user };\n//       newUserInfo.error = \"\";\n//       newUserInfo.success = true;\n//       updateUserName(name);\n//       return newUserInfo;\n//     })\n//     .catch((error) => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo = {};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       return newUserInfo;\n//       // ..\n//     });\n// };\n// export const signInWithEmailAndPassword = () => {\n//   signInWithEmailAndPassword(auth, email,password)\n//     .then((res) => {\n//     //   const user = res.user;\n//       const newUserInfo = res.user;\n//       newUserInfo.error = \"\";\n//       newUserInfo.success = true;\n//       return newUserInfo;\n//     })\n//     .catch((error) => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo = {};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       return newUserInfo;\n//     });\n// };\n// const updateUserName = (name) => {\n//   const auth = getAuth();\n//   updateProfile(auth.currentUser, {\n//     displayName: name,\n//   })\n//     .then((res) => {\n//       console.log(\"update user name successfully\");\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// };","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/loginManager.js"],"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","FacebookAuthProvider","firebaseConfig","initializeLoginFramework","app","auth","googleProvider","fbProvider","handleGoogleSignIn","then","res","displayName","email","photoURL","user","signedInUser","isSignedIn","name","photo","success","console","log","catch","err","message","handleFbSignIn","result","credential","credentialFromResult","accessToken","error","errorCode","code","errorMessage","credentialFromError","handleSignOut","signedOutUser"],"mappings":"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","sourcesContent":["import \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n  FacebookAuthProvider,\r\n} from \"firebase/auth\";\r\nimport firebaseConfig from \"./firebase.config\";\r\n\r\nexport const initializeLoginFramework = () => {\r\n  const app = initializeApp(firebaseConfig);\r\n};\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst fbProvider = new FacebookAuthProvider();\r\nexport const handleGoogleSignIn = () => {\r\n  return signInWithPopup(auth, googleProvider)\r\n    .then((res) => {\r\n      const { displayName, email, photoURL } = res.user;\r\n      const signedInUser = {\r\n        isSignedIn: true,\r\n        name: displayName,\r\n        email: email,\r\n        photo: photoURL,\r\n        success:true\r\n      };\r\n      return signedInUser;\r\n      console.log(displayName, email, photoURL);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      console.log(err.message);\r\n    });\r\n};\r\n\r\nexport const handleFbSignIn = () => {\r\n  const auth = getAuth(app);\r\n  return signInWithPopup(auth, fbProvider)\r\n    .then((result) => {\r\n      // The signed-in user info.\r\n      const user = result.user;\r\n      user.success=true;\r\n      return user;\r\n\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n      const credential = FacebookAuthProvider.credentialFromResult(result);\r\n      const accessToken = credential.accessToken;\r\n      console.log(user);\r\n\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      const email = error.email;\r\n      // The AuthCredential type that was used.\r\n      const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n      console.log(errorCode, errorMessage, email, credential);\r\n\r\n      // ...\r\n    });\r\n};\r\n\r\nexport const handleSignOut = () => {\r\n  return signOut(auth)\r\n    .then((res) => {\r\n      const signedOutUser = {\r\n        isSignedIn: false,\r\n        name: \"\",\r\n        photo: \"\",\r\n        email: \"\",\r\n        error: \"\",\r\n        success: false,\r\n      };\r\n      return signedOutUser;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n\r\n// export const createUserWithEmailAndPassword = (name,email,password) => {\r\n//   console.log(user.email, user.password, \"subbmit\");\r\n//   const auth = getAuth();\r\n//   return createUserWithEmailAndPassword(auth, email,password)\r\n//     .then((res) => {\r\n//       const user = res.user;\r\n//       console.log(res);\r\n//       const newUserInfo = { ...user };\r\n//       newUserInfo.error = \"\";\r\n//       newUserInfo.success = true;\r\n//       updateUserName(name);\r\n//       return newUserInfo;\r\n//     })\r\n//     .catch((error) => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo = {};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       return newUserInfo;\r\n//       // ..\r\n//     });\r\n// };\r\n\r\n// export const signInWithEmailAndPassword = () => {\r\n//   signInWithEmailAndPassword(auth, email,password)\r\n//     .then((res) => {\r\n//     //   const user = res.user;\r\n//       const newUserInfo = res.user;\r\n//       newUserInfo.error = \"\";\r\n//       newUserInfo.success = true;\r\n//       return newUserInfo;\r\n//     })\r\n//     .catch((error) => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo = {};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       return newUserInfo;\r\n//     });\r\n// };\r\n\r\n// const updateUserName = (name) => {\r\n//   const auth = getAuth();\r\n//   updateProfile(auth.currentUser, {\r\n//     displayName: name,\r\n//   })\r\n//     .then((res) => {\r\n//       console.log(\"update user name successfully\");\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error);\r\n//     });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}