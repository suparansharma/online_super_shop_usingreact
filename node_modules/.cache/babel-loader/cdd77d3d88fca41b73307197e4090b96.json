{"ast":null,"code":"// import \"firebase/auth\";\n// import { initializeApp } from \"firebase/app\";\n// import {\n//   getAuth,\n//   signInWithPopup,\n//   GoogleAuthProvider,\n//   signOut,\n//   updateProfile,\n//   FacebookAuthProvider,\n//   updateCurrentUser,\n// //   createUserWithEmailAndPassword,\n// //   signInWithEmailAndPassword\n// } from \"firebase/auth\";\n// import firebaseConfig from \"./firebase.config\";\n// export const initializeLoginFramework = () => {\n//   const app = initializeApp(firebaseConfig);\n// };\n// const app = initializeApp(firebaseConfig);\n// const auth = getAuth(app);\n// const googleProvider = new GoogleAuthProvider();\n// const fbProvider = new FacebookAuthProvider();\n// export const handleGoogleSignIn = () => {\n//   return signInWithPopup(auth, googleProvider)\n//     .then((res) => {\n//       const { displayName, email, photoURL } = res.user;\n//       const signedInUser = {\n//         isSignedIn: true,\n//         name: displayName,\n//         email: email,\n//         photo: photoURL,\n//         success:true\n//       };\n//       return signedInUser;\n//       console.log(displayName, email, photoURL);\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//       console.log(err.message);\n//     });\n// };\n// export const handleFbSignIn = () => {\n//   const auth = getAuth(app);\n//   return signInWithPopup(auth, fbProvider)\n//     .then((result) => {\n//       // The signed-in user info.\n//       const user = result.user;\n//       user.success=true;\n//       return user;\n//       // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n//     //   const credential = FacebookAuthProvider.credentialFromResult(result);\n//     //   const accessToken = credential.accessToken;\n//     //   console.log(user);\n//       // ...\n//     })\n//     .catch((error) => {\n//       // Handle Errors here.\n//       const errorCode = error.code;\n//       const errorMessage = error.message;\n//       // The email of the user's account used.\n//       const email = error.email;\n//       // The AuthCredential type that was used.\n//       const credential = FacebookAuthProvider.credentialFromError(error);\n//       console.log(errorCode, errorMessage, email, credential);\n//       // ...\n//     });\n// };\n// export const handleSignOut = () => {\n//   return signOut(auth)\n//     .then((res) => {\n//       const signedOutUser = {\n//         isSignedIn: false,\n//         name: \"\",\n//         photo: \"\",\n//         email: \"\",\n//         error: \"\",\n//         success: false,\n//       };\n//       return signedOutUser;\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// }\n// export const createUserWithEmailAndPassword = (name,email,password) =>{\n//   const auth = getAuth();\n//   return createUserWithEmailAndPassword(email,password)\n//     .then(res => {\n//       const newUserInfo = res.user;\n//       newUserInfo.error ='';\n//       newUserInfo.success = true;\n//       updateUserName(name);\n//       return newUserInfo;\n//     })\n//     .catch((error) => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo = {};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       return newUserInfo;\n//       // ..\n//     });\n// };\n// export const signInWithEmailAndPassword = (email,password) => {\n//   return signInWithEmailAndPassword( email,password)\n//     .then((res) => {\n//     //   const user = res.user;\n//       const newUserInfo = res.user;\n//       newUserInfo.error = '';\n//       newUserInfo.success = true;\n//       return newUserInfo;\n//     })\n//     .catch((error) => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo = {};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       return newUserInfo;\n//     });\n// };\n// const updateUserName = (name) => {\n//   const auth = getAuth();\n//   updateCurrentUser(auth.currentUser, {\n//     displayName: name,\n//   })\n//     .then((res) => {\n//       console.log(\"update user name successfully\");\n//     })\n//     .catch((error) => {\n//       console.log(error);\n//     });\n// };\n// ================================================\nimport \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, updateProfile, FacebookAuthProvider } from \"firebase/auth\";\nimport firebaseConfig from './firebase.config'; // import { createUserWithEmailAndPassword } from 'firebase/auth';\n\nimport { firebase } from 'firebase/app';\nexport const initializeLoginFramework = () => {\n  if (firebase.app.length === 0) {\n    const app = initializeApp(firebaseConfig);\n    const auth = getAuth(app);\n  }\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new GoogleAuthProvider();\n  const app = initializeApp(firebaseConfig);\n  const auth = getAuth(app);\n  return signInWithPopup(auth, googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    return signedInUser;\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  const fbProvider = new FacebookAuthProvider();\n  const app = initializeApp(firebaseConfig);\n  const auth = getAuth(app);\n  return signInWithPopup(auth, fbProvider).then(result => {\n    // The signed-in user info.\n    const user = result.user;\n    return user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    const accessToken = credential.accessToken;\n    console.log(user); // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    console.log(errorCode, errorMessage, email, credential); // ...\n  });\n};\nexport const handleSignOut = () => {\n  const app = initializeApp(firebaseConfig);\n  const auth = getAuth(app);\n  return signOut(auth).then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: '',\n      photo: '',\n      email: '',\n      error: '',\n      success: false\n    };\n    return signedOutUser;\n  }).catch(error => {\n    console.log(error);\n  });\n}; // export const createUserWithEmailAndPassword = () =>{\n//     console.log(user.email,user.password,\"subbmit\");\n//     const auth = getAuth();\n//     createUserWithEmailAndPassword(auth,user.email, user.password)\n// .then(res => {\n//   const user = res.user;\n//   console.log(res);\n//   const newUserInfo ={...user};\n//   newUserInfo.error = '';\n//   newUserInfo.success = true;\n//   setUser(newUserInfo);\n//   updateUserName(user.name);\n// })\n// .catch(error => {\n//   // const errorCode = error.code;\n//   // const errorMessage = error.message;\n//   // console.log(errorCode,errorMessage);\n//   const newUserInfo ={...user};\n//   newUserInfo.error = error.message;\n//   newUserInfo.success = false;\n//   setUser(newUserInfo);\n//   // ..\n// });\n// }\n// export const signInWithEmailAndPassword = () =>{\n//     signInWithEmailAndPassword(auth, user.email, user.password)\n//     .then(res => {\n//       const user = res.user;\n//       console.log(res);\n//       const newUserInfo ={...user};\n//       newUserInfo.error = '';\n//       newUserInfo.success = true;\n//       setUser(newUserInfo);\n//       setLoggedInUser(newUserInfo);\n//       history.replace(from);\n//       console.log('sing is user info',res.user);\n//     })\n//     .catch(error => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo ={...user};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       setUser(newUserInfo);\n//     });\n// }\n// const updateUserName =name =>{\n//     const auth = getAuth();\n//     updateProfile(auth.currentUser, {\n//     displayName: name\n//     }).then(res => {\n//       console.log(\"update user name successfully\")\n//     }).catch((error) => {\n//       console.log(error)\n//     });\n//   }","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/loginManager.js"],"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","updateProfile","FacebookAuthProvider","firebaseConfig","firebase","initializeLoginFramework","app","length","auth","handleGoogleSignIn","googleProvider","then","res","displayName","email","photoURL","user","signedInUser","isSignedIn","name","photo","catch","err","console","log","message","handleFbSignIn","fbProvider","result","credential","credentialFromResult","accessToken","error","errorCode","code","errorMessage","credentialFromError","handleSignOut","signedOutUser","success"],"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","sourcesContent":["// import \"firebase/auth\";\r\n// import { initializeApp } from \"firebase/app\";\r\n// import {\r\n//   getAuth,\r\n//   signInWithPopup,\r\n//   GoogleAuthProvider,\r\n//   signOut,\r\n//   updateProfile,\r\n//   FacebookAuthProvider,\r\n//   updateCurrentUser,\r\n// //   createUserWithEmailAndPassword,\r\n// //   signInWithEmailAndPassword\r\n// } from \"firebase/auth\";\r\n// import firebaseConfig from \"./firebase.config\";\r\n\r\n// export const initializeLoginFramework = () => {\r\n//   const app = initializeApp(firebaseConfig);\r\n// };\r\n// const app = initializeApp(firebaseConfig);\r\n// const auth = getAuth(app);\r\n// const googleProvider = new GoogleAuthProvider();\r\n// const fbProvider = new FacebookAuthProvider();\r\n\r\n\r\n\r\n// export const handleGoogleSignIn = () => {\r\n//   return signInWithPopup(auth, googleProvider)\r\n//     .then((res) => {\r\n//       const { displayName, email, photoURL } = res.user;\r\n//       const signedInUser = {\r\n//         isSignedIn: true,\r\n//         name: displayName,\r\n//         email: email,\r\n//         photo: photoURL,\r\n//         success:true\r\n//       };\r\n//       return signedInUser;\r\n//       console.log(displayName, email, photoURL);\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err);\r\n//       console.log(err.message);\r\n//     });\r\n// };\r\n\r\n// export const handleFbSignIn = () => {\r\n//   const auth = getAuth(app);\r\n//   return signInWithPopup(auth, fbProvider)\r\n//     .then((result) => {\r\n//       // The signed-in user info.\r\n//       const user = result.user;\r\n//       user.success=true;\r\n//       return user;\r\n\r\n//       // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n//     //   const credential = FacebookAuthProvider.credentialFromResult(result);\r\n//     //   const accessToken = credential.accessToken;\r\n//     //   console.log(user);\r\n\r\n//       // ...\r\n//     })\r\n//     .catch((error) => {\r\n//       // Handle Errors here.\r\n//       const errorCode = error.code;\r\n//       const errorMessage = error.message;\r\n//       // The email of the user's account used.\r\n//       const email = error.email;\r\n//       // The AuthCredential type that was used.\r\n//       const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n//       console.log(errorCode, errorMessage, email, credential);\r\n\r\n//       // ...\r\n//     });\r\n// };\r\n\r\n// export const handleSignOut = () => {\r\n//   return signOut(auth)\r\n//     .then((res) => {\r\n//       const signedOutUser = {\r\n//         isSignedIn: false,\r\n//         name: \"\",\r\n//         photo: \"\",\r\n//         email: \"\",\r\n//         error: \"\",\r\n//         success: false,\r\n//       };\r\n//       return signedOutUser;\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error);\r\n//     });\r\n// }\r\n\r\n// export const createUserWithEmailAndPassword = (name,email,password) =>{\r\n//   const auth = getAuth();\r\n//   return createUserWithEmailAndPassword(email,password)\r\n//     .then(res => {\r\n\r\n//       const newUserInfo = res.user;\r\n//       newUserInfo.error ='';\r\n//       newUserInfo.success = true;\r\n//       updateUserName(name);\r\n//       return newUserInfo;\r\n//     })\r\n//     .catch((error) => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo = {};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       return newUserInfo;\r\n//       // ..\r\n//     });\r\n// };\r\n\r\n// export const signInWithEmailAndPassword = (email,password) => {\r\n//   return signInWithEmailAndPassword( email,password)\r\n//     .then((res) => {\r\n//     //   const user = res.user;\r\n//       const newUserInfo = res.user;\r\n//       newUserInfo.error = '';\r\n//       newUserInfo.success = true;\r\n//       return newUserInfo;\r\n//     })\r\n//     .catch((error) => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo = {};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       return newUserInfo;\r\n//     });\r\n// };\r\n\r\n// const updateUserName = (name) => {\r\n//   const auth = getAuth();\r\n//   updateCurrentUser(auth.currentUser, {\r\n//     displayName: name,\r\n//   })\r\n//     .then((res) => {\r\n//       console.log(\"update user name successfully\");\r\n//     })\r\n//     .catch((error) => {\r\n//       console.log(error);\r\n//     });\r\n// };\r\n\r\n// ================================================\r\n\r\nimport \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth,signInWithPopup,GoogleAuthProvider,signOut, updateProfile, FacebookAuthProvider  } from \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n// import { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { firebase } from 'firebase/app';\r\n\r\n\r\nexport const initializeLoginFramework = () =>{\r\n\r\n    if(firebase.app.length ===0){\r\n        const app = initializeApp(firebaseConfig);\r\n        const auth = getAuth(app);\r\n    }\r\n   \r\n}\r\n\r\n\r\nexport const handleGoogleSignIn =()=>{\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const app = initializeApp(firebaseConfig);\r\n    const auth = getAuth(app);\r\n   return signInWithPopup(auth, googleProvider)\r\n    .then(res => {\r\n      const {displayName,email,photoURL}=res.user;\r\n      const signedInUser ={\r\n        isSignedIn:true,\r\n        name:displayName,\r\n        email:email,\r\n        photo:photoURL\r\n      };\r\n      return signedInUser;\r\n      \r\n    })\r\n    .catch(err =>{ \r\n      console.log(err);\r\n      console.log(err.message);\r\n    })\r\n  \r\n    }\r\n\r\n\r\n\r\n    export const handleFbSignIn =() =>{\r\n        const fbProvider = new FacebookAuthProvider();\r\n        const app = initializeApp(firebaseConfig);\r\n        const auth = getAuth(app);\r\n        return signInWithPopup(auth, fbProvider)\r\n      .then((result) => {\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n        return user;\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        const credential = FacebookAuthProvider.credentialFromResult(result);\r\n        const accessToken = credential.accessToken;\r\n        console.log(user);\r\n    \r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = FacebookAuthProvider.credentialFromError(error);\r\n    \r\n        console.log(errorCode,errorMessage,email,credential);\r\n    \r\n        // ...\r\n      });\r\n    \r\n      }\r\n\r\n\r\n\r\n\r\n\r\n      export const handleSignOut =()=>{\r\n        const app = initializeApp(firebaseConfig);\r\n        const auth = getAuth(app);\r\n       return signOut(auth).then(res => {\r\n          const signedOutUser = {\r\n            isSignedIn:false,\r\n            name:'',\r\n            photo:'',\r\n            email:'',\r\n            error:'',\r\n            success:false\r\n    \r\n          }\r\n          return signedOutUser;\r\n          \r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      }\r\n    \r\n// export const createUserWithEmailAndPassword = () =>{\r\n//     console.log(user.email,user.password,\"subbmit\");\r\n//     const auth = getAuth();\r\n//     createUserWithEmailAndPassword(auth,user.email, user.password)\r\n// .then(res => {\r\n//   const user = res.user;\r\n//   console.log(res);\r\n//   const newUserInfo ={...user};\r\n//   newUserInfo.error = '';\r\n//   newUserInfo.success = true;\r\n//   setUser(newUserInfo);\r\n//   updateUserName(user.name);\r\n// })\r\n// .catch(error => {\r\n//   // const errorCode = error.code;\r\n//   // const errorMessage = error.message;\r\n//   // console.log(errorCode,errorMessage);\r\n//   const newUserInfo ={...user};\r\n//   newUserInfo.error = error.message;\r\n//   newUserInfo.success = false;\r\n//   setUser(newUserInfo);\r\n//   // ..\r\n// });\r\n// }\r\n\r\n\r\n// export const signInWithEmailAndPassword = () =>{\r\n//     signInWithEmailAndPassword(auth, user.email, user.password)\r\n//     .then(res => {\r\n//       const user = res.user;\r\n//       console.log(res);\r\n//       const newUserInfo ={...user};\r\n//       newUserInfo.error = '';\r\n//       newUserInfo.success = true;\r\n//       setUser(newUserInfo);\r\n//       setLoggedInUser(newUserInfo);\r\n//       history.replace(from);\r\n//       console.log('sing is user info',res.user);\r\n//     })\r\n//     .catch(error => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo ={...user};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       setUser(newUserInfo);\r\n      \r\n//     });\r\n// }\r\n\r\n\r\n\r\n// const updateUserName =name =>{\r\n//     const auth = getAuth();\r\n//     updateProfile(auth.currentUser, {\r\n//     displayName: name\r\n//     }).then(res => {\r\n//       console.log(\"update user name successfully\")\r\n//     }).catch((error) => {\r\n//       console.log(error)\r\n//     });\r\n//   }\r\n  "]},"metadata":{},"sourceType":"module"}