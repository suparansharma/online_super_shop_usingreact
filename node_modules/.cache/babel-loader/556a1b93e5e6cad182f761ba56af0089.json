{"ast":null,"code":"import \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider } from \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nexport const initializeLoginFramework = () => {\n  const app = initializeApp(firebaseConfig);\n};\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\nconst fbProvider = new FacebookAuthProvider();\nexport const handleGoogleSignIn = () => {\n  return signInWithPopup(auth, googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    return signedInUser;\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  const auth = getAuth(app);\n  return signInWithPopup(auth, fbProvider).then(result => {\n    // The signed-in user info.\n    const user = result.user;\n    return user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    const accessToken = credential.accessToken;\n    console.log(user); // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    console.log(errorCode, errorMessage, email, credential); // ...\n  });\n};\nexport const handleSignOut = () => {\n  return signOut(auth).then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: '',\n      photo: '',\n      email: '',\n      error: '',\n      success: false\n    };\n    return signedOutUser;\n  }).catch(error => {\n    console.log(error);\n  });\n}; //   export const createUserWithEmailAndPassword = () =>{\n//     console.log(user.email,user.password,\"subbmit\");\n//     const auth = getAuth();\n//     createUserWithEmailAndPassword(auth,user.email, user.password)\n// .then(res => {\n//   const user = res.user;\n//   console.log(res);\n//   const newUserInfo ={...user};\n//   newUserInfo.error = '';\n//   newUserInfo.success = true;\n//   setUser(newUserInfo);\n//   updateUserName(user.name);\n// })\n// .catch(error => {\n//   // const errorCode = error.code;\n//   // const errorMessage = error.message;\n//   // console.log(errorCode,errorMessage);\n//   const newUserInfo ={...user};\n//   newUserInfo.error = error.message;\n//   newUserInfo.success = false;\n//   setUser(newUserInfo);\n//   // ..\n// });\n//   }\n//   export const signInWithEmailAndPassword = () =>{\n//     signInWithEmailAndPassword(auth, user.email, user.password)\n//     .then(res => {\n//       const user = res.user;\n//       console.log(res);\n//       const newUserInfo ={...user};\n//       newUserInfo.error = '';\n//       newUserInfo.success = true;\n//       setUser(newUserInfo);\n//       setLoggedInUser(newUserInfo);\n//       history.replace(from);\n//       console.log('sing is user info',res.user);\n//     })\n//     .catch(error => {\n//       // const errorCode = error.code;\n//       // const errorMessage = error.message;\n//       // console.log(errorCode,errorMessage);\n//       const newUserInfo ={...user};\n//       newUserInfo.error = error.message;\n//       newUserInfo.success = false;\n//       setUser(newUserInfo);\n//     });\n//   }\n//   const updateUserName =name =>{\n//     const auth = getAuth();\n//     updateProfile(auth.currentUser, {\n//     displayName: name\n//     }).then(res => {\n//       console.log(\"update user name successfully\")\n//     }).catch((error) => {\n//       console.log(error)\n//     });\n//   }","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/loginManager.js"],"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","FacebookAuthProvider","firebaseConfig","initializeLoginFramework","app","auth","googleProvider","fbProvider","handleGoogleSignIn","then","res","displayName","email","photoURL","user","signedInUser","isSignedIn","name","photo","console","log","catch","err","message","handleFbSignIn","result","credential","credentialFromResult","accessToken","error","errorCode","code","errorMessage","credentialFromError","handleSignOut","signedOutUser","success"],"mappings":"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","sourcesContent":["import \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth,signInWithPopup,GoogleAuthProvider,signOut,signInWithEmailAndPassword,createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider  } from \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\n\r\nexport const initializeLoginFramework =() =>{\r\n    const app = initializeApp(firebaseConfig);\r\n}\r\n\r\nconst auth = getAuth(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst fbProvider = new FacebookAuthProvider();\r\nexport const handleGoogleSignIn =()=>{\r\nreturn signInWithPopup(auth, googleProvider)\r\n.then(res => {\r\n  const {displayName,email,photoURL}=res.user;\r\n  const signedInUser ={\r\n    isSignedIn:true,\r\n    name:displayName,\r\n    email:email,\r\n    photo:photoURL\r\n  }\r\n  return signedInUser;\r\n  console.log(displayName,email,photoURL);\r\n})\r\n.catch(err =>{ \r\n  console.log(err);\r\n  console.log(err.message);\r\n})\r\n\r\n}\r\n;\r\n\r\n\r\nexport const handleFbSignIn =() =>{\r\n    const auth = getAuth(app);\r\n    return signInWithPopup(auth, fbProvider)\r\n  .then((result) => {\r\n    // The signed-in user info.\r\n    const user = result.user;\r\n    return user;\r\n    \r\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n    const credential = FacebookAuthProvider.credentialFromResult(result);\r\n    const accessToken = credential.accessToken;\r\n    console.log(user);\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The AuthCredential type that was used.\r\n    const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n    console.log(errorCode,errorMessage,email,credential);\r\n\r\n    // ...\r\n  });\r\n\r\n  }\r\n\r\n  export const handleSignOut =()=>{\r\n    return signOut(auth).then(res => {\r\n      const signedOutUser = {\r\n        isSignedIn:false,\r\n        name:'',\r\n        photo:'',\r\n        email:'',\r\n        error:'',\r\n        success:false\r\n\r\n      }\r\n      return signedOutUser;\r\n      \r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n//   export const createUserWithEmailAndPassword = () =>{\r\n//     console.log(user.email,user.password,\"subbmit\");\r\n//     const auth = getAuth();\r\n//     createUserWithEmailAndPassword(auth,user.email, user.password)\r\n// .then(res => {\r\n//   const user = res.user;\r\n//   console.log(res);\r\n//   const newUserInfo ={...user};\r\n//   newUserInfo.error = '';\r\n//   newUserInfo.success = true;\r\n//   setUser(newUserInfo);\r\n//   updateUserName(user.name);\r\n// })\r\n// .catch(error => {\r\n//   // const errorCode = error.code;\r\n//   // const errorMessage = error.message;\r\n//   // console.log(errorCode,errorMessage);\r\n//   const newUserInfo ={...user};\r\n//   newUserInfo.error = error.message;\r\n//   newUserInfo.success = false;\r\n//   setUser(newUserInfo);\r\n//   // ..\r\n// });\r\n//   }\r\n\r\n\r\n//   export const signInWithEmailAndPassword = () =>{\r\n//     signInWithEmailAndPassword(auth, user.email, user.password)\r\n//     .then(res => {\r\n//       const user = res.user;\r\n//       console.log(res);\r\n//       const newUserInfo ={...user};\r\n//       newUserInfo.error = '';\r\n//       newUserInfo.success = true;\r\n//       setUser(newUserInfo);\r\n//       setLoggedInUser(newUserInfo);\r\n//       history.replace(from);\r\n//       console.log('sing is user info',res.user);\r\n//     })\r\n//     .catch(error => {\r\n//       // const errorCode = error.code;\r\n//       // const errorMessage = error.message;\r\n//       // console.log(errorCode,errorMessage);\r\n//       const newUserInfo ={...user};\r\n//       newUserInfo.error = error.message;\r\n//       newUserInfo.success = false;\r\n//       setUser(newUserInfo);\r\n      \r\n//     });\r\n//   }\r\n\r\n\r\n//   const updateUserName =name =>{\r\n//     const auth = getAuth();\r\n//     updateProfile(auth.currentUser, {\r\n//     displayName: name\r\n//     }).then(res => {\r\n//       console.log(\"update user name successfully\")\r\n//     }).catch((error) => {\r\n//       console.log(error)\r\n//     });\r\n//   }"]},"metadata":{},"sourceType":"module"}