{"ast":null,"code":"import \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, updateProfile, FacebookAuthProvider //   createUserWithEmailAndPassword,\n//   signInWithEmailAndPassword\n} from \"firebase/auth\";\nimport firebaseConfig from \"./firebase.config\"; // export const initializeLoginFramework = () => {\n//   const app = initializeApp(firebaseConfig);\n// };\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\nconst fbProvider = new FacebookAuthProvider();\nexport const handleGoogleSignIn = () => {\n  return signInWithPopup(auth, googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL,\n      success: true\n    };\n    return signedInUser;\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleFbSignIn = () => {\n  const auth = getAuth(app);\n  return signInWithPopup(auth, fbProvider).then(result => {\n    // The signed-in user info.\n    const user = result.user;\n    user.success = true;\n    return user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    //   const credential = FacebookAuthProvider.credentialFromResult(result);\n    //   const accessToken = credential.accessToken;\n    //   console.log(user);\n    // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    console.log(errorCode, errorMessage, email, credential); // ...\n  });\n};\nexport const handleSignOut = () => {\n  return signOut(auth).then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: \"\",\n      photo: \"\",\n      email: \"\",\n      error: \"\",\n      success: false\n    };\n    return signedOutUser;\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const createUserWithEmailAndPassword = (name, email, password) => {\n  const auth = getAuth();\n  return createUserWithEmailAndPassword(name, email, password).then(res => {\n    const newUserInfo = res.user;\n    newUserInfo.error = \"\";\n    newUserInfo.success = true;\n    updateUserName(name);\n    return newUserInfo;\n  }).catch(error => {\n    // const errorCode = error.code;\n    // const errorMessage = error.message;\n    // console.log(errorCode,errorMessage);\n    const newUserInfo = {};\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    return newUserInfo; // ..\n  });\n};\nexport const signInWithEmailAndPassword = (email, password) => {\n  return signInWithEmailAndPassword(email, password).then(res => {\n    //   const user = res.user;\n    const newUserInfo = res.user;\n    newUserInfo.error = \"\";\n    newUserInfo.success = true;\n    return newUserInfo;\n  }).catch(error => {\n    // const errorCode = error.code;\n    // const errorMessage = error.message;\n    // console.log(errorCode,errorMessage);\n    const newUserInfo = {};\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    return newUserInfo;\n  });\n};\n\nconst updateUserName = name => {\n  const auth = getAuth();\n  updateProfile(auth.currentUser, {\n    displayName: name\n  }).then(res => {\n    console.log(\"update user name successfully\");\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/loginManager.js"],"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","updateProfile","FacebookAuthProvider","firebaseConfig","app","auth","googleProvider","fbProvider","handleGoogleSignIn","then","res","displayName","email","photoURL","user","signedInUser","isSignedIn","name","photo","success","console","log","catch","err","message","handleFbSignIn","result","error","errorCode","code","errorMessage","credential","credentialFromError","handleSignOut","signedOutUser","createUserWithEmailAndPassword","password","newUserInfo","updateUserName","signInWithEmailAndPassword","currentUser"],"mappings":"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","sourcesContent":["import \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  signOut,\r\n  updateProfile,\r\n  FacebookAuthProvider,\r\n//   createUserWithEmailAndPassword,\r\n//   signInWithEmailAndPassword\r\n} from \"firebase/auth\";\r\nimport firebaseConfig from \"./firebase.config\";\r\n\r\n// export const initializeLoginFramework = () => {\r\n//   const app = initializeApp(firebaseConfig);\r\n// };\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst fbProvider = new FacebookAuthProvider();\r\n\r\n\r\n\r\nexport const handleGoogleSignIn = () => {\r\n  return signInWithPopup(auth, googleProvider)\r\n    .then((res) => {\r\n      const { displayName, email, photoURL } = res.user;\r\n      const signedInUser = {\r\n        isSignedIn: true,\r\n        name: displayName,\r\n        email: email,\r\n        photo: photoURL,\r\n        success:true\r\n      };\r\n      return signedInUser;\r\n      console.log(displayName, email, photoURL);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      console.log(err.message);\r\n    });\r\n};\r\n\r\nexport const handleFbSignIn = () => {\r\n  const auth = getAuth(app);\r\n  return signInWithPopup(auth, fbProvider)\r\n    .then((result) => {\r\n      // The signed-in user info.\r\n      const user = result.user;\r\n      user.success=true;\r\n      return user;\r\n\r\n      // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n    //   const credential = FacebookAuthProvider.credentialFromResult(result);\r\n    //   const accessToken = credential.accessToken;\r\n    //   console.log(user);\r\n\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      const email = error.email;\r\n      // The AuthCredential type that was used.\r\n      const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n      console.log(errorCode, errorMessage, email, credential);\r\n\r\n      // ...\r\n    });\r\n};\r\n\r\nexport const handleSignOut = () => {\r\n  return signOut(auth)\r\n    .then((res) => {\r\n      const signedOutUser = {\r\n        isSignedIn: false,\r\n        name: \"\",\r\n        photo: \"\",\r\n        email: \"\",\r\n        error: \"\",\r\n        success: false,\r\n      };\r\n      return signedOutUser;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nexport const createUserWithEmailAndPassword = (name,email,password) =>{\r\n  const auth = getAuth();\r\n  return createUserWithEmailAndPassword(name, email,password)\r\n    .then(res => {\r\n\r\n      const newUserInfo = res.user;\r\n      newUserInfo.error = \"\";\r\n      newUserInfo.success = true;\r\n      updateUserName(name);\r\n      return newUserInfo;\r\n    })\r\n    .catch((error) => {\r\n      // const errorCode = error.code;\r\n      // const errorMessage = error.message;\r\n      // console.log(errorCode,errorMessage);\r\n      const newUserInfo = {};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      return newUserInfo;\r\n      // ..\r\n    });\r\n};\r\n\r\nexport const signInWithEmailAndPassword = (email,password) => {\r\n  return signInWithEmailAndPassword( email,password)\r\n    .then((res) => {\r\n    //   const user = res.user;\r\n      const newUserInfo = res.user;\r\n      newUserInfo.error = \"\";\r\n      newUserInfo.success = true;\r\n      return newUserInfo;\r\n    })\r\n    .catch((error) => {\r\n      // const errorCode = error.code;\r\n      // const errorMessage = error.message;\r\n      // console.log(errorCode,errorMessage);\r\n      const newUserInfo = {};\r\n      newUserInfo.error = error.message;\r\n      newUserInfo.success = false;\r\n      return newUserInfo;\r\n    });\r\n};\r\n\r\nconst updateUserName = (name) => {\r\n  const auth = getAuth();\r\n  updateProfile(auth.currentUser, {\r\n    displayName: name,\r\n  })\r\n    .then((res) => {\r\n      console.log(\"update user name successfully\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}