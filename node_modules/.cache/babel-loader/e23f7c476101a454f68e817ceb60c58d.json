{"ast":null,"code":"import \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider } from \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nexport const initializeLoginFramework = () => {\n  const app = initializeApp(firebaseConfig);\n};\nconst auth = getAuth(app);\nconst googleProvider = new GoogleAuthProvider();\nconst fbProvider = new FacebookAuthProvider();\nexport const handleGoogleSignIn = () => {\n  signInWithPopup(auth, googleProvider).then(res => {\n    const {\n      displayName,\n      email,\n      photoURL\n    } = res.user;\n    const signedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    setUser(signedInUser);\n    console.log(displayName, email, photoURL);\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\n\nconst handleFbSignIn = () => {\n  const auth = getAuth(app);\n  signInWithPopup(auth, fbProvider).then(result => {\n    // The signed-in user info.\n    const user = result.user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    const accessToken = credential.accessToken;\n    console.log(user); // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    console.log(errorCode, errorMessage, email, credential); // ...\n  });\n};","map":{"version":3,"sources":["C:/Web Development/React/online_super_shop_usingreact/src/Component/Login/loginManager.js"],"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","signOut","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","FacebookAuthProvider","firebaseConfig","initializeLoginFramework","app","auth","googleProvider","fbProvider","handleGoogleSignIn","then","res","displayName","email","photoURL","user","signedInUser","isSignedIn","name","photo","setUser","console","log","catch","err","message","handleFbSignIn","result","credential","credentialFromResult","accessToken","error","errorCode","code","errorMessage","credentialFromError"],"mappings":"AAAA,OAAO,eAAP;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAiBC,eAAjB,EAAiCC,kBAAjC,EAAoDC,OAApD,EAA4DC,0BAA5D,EAAuFC,8BAAvF,EAAuHC,aAAvH,EAAsIC,oBAAtI,QAAmK,eAAnK;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAGA,OAAO,MAAMC,wBAAwB,GAAE,MAAK;AACxC,QAAMC,GAAG,GAAGX,aAAa,CAACS,cAAD,CAAzB;AACH,CAFM;AAIP,MAAMG,IAAI,GAAGX,OAAO,CAACU,GAAD,CAApB;AACA,MAAME,cAAc,GAAG,IAAIV,kBAAJ,EAAvB;AACA,MAAMW,UAAU,GAAG,IAAIN,oBAAJ,EAAnB;AACA,OAAO,MAAMO,kBAAkB,GAAE,MAAI;AACrCb,EAAAA,eAAe,CAACU,IAAD,EAAOC,cAAP,CAAf,CACCG,IADD,CACMC,GAAG,IAAI;AACX,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA,KAAb;AAAmBC,MAAAA;AAAnB,QAA6BH,GAAG,CAACI,IAAvC;AACA,UAAMC,YAAY,GAAE;AAClBC,MAAAA,UAAU,EAAC,IADO;AAElBC,MAAAA,IAAI,EAACN,WAFa;AAGlBC,MAAAA,KAAK,EAACA,KAHY;AAIlBM,MAAAA,KAAK,EAACL;AAJY,KAApB;AAMAM,IAAAA,OAAO,CAACJ,YAAD,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAAwBC,KAAxB,EAA8BC,QAA9B;AACD,GAXD,EAYCS,KAZD,CAYOC,GAAG,IAAG;AACXH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB;AACD,GAfD;AAiBC,CAlBM;;AAsBP,MAAMC,cAAc,GAAE,MAAK;AACvB,QAAMpB,IAAI,GAAGX,OAAO,CAACU,GAAD,CAApB;AACAT,EAAAA,eAAe,CAACU,IAAD,EAAOE,UAAP,CAAf,CACDE,IADC,CACKiB,MAAD,IAAY;AAChB;AACA,UAAMZ,IAAI,GAAGY,MAAM,CAACZ,IAApB,CAFgB,CAIhB;;AACA,UAAMa,UAAU,GAAG1B,oBAAoB,CAAC2B,oBAArB,CAA0CF,MAA1C,CAAnB;AACA,UAAMG,WAAW,GAAGF,UAAU,CAACE,WAA/B;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAPgB,CAShB;AACD,GAXC,EAYDQ,KAZC,CAYMQ,KAAD,IAAW;AAChB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACN,OAA3B,CAHgB,CAIhB;;AACA,UAAMZ,KAAK,GAAGkB,KAAK,CAAClB,KAApB,CALgB,CAMhB;;AACA,UAAMe,UAAU,GAAG1B,oBAAoB,CAACiC,mBAArB,CAAyCJ,KAAzC,CAAnB;AAEAV,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ,EAAsBE,YAAtB,EAAmCrB,KAAnC,EAAyCe,UAAzC,EATgB,CAWhB;AACD,GAxBC;AA0BD,CA5BH","sourcesContent":["import \"firebase/auth\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth,signInWithPopup,GoogleAuthProvider,signOut,signInWithEmailAndPassword,createUserWithEmailAndPassword, updateProfile, FacebookAuthProvider  } from \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\n\r\n\r\nexport const initializeLoginFramework =() =>{\r\n    const app = initializeApp(firebaseConfig);\r\n}\r\n\r\nconst auth = getAuth(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst fbProvider = new FacebookAuthProvider();\r\nexport const handleGoogleSignIn =()=>{\r\nsignInWithPopup(auth, googleProvider)\r\n.then(res => {\r\n  const {displayName,email,photoURL}=res.user;\r\n  const signedInUser ={\r\n    isSignedIn:true,\r\n    name:displayName,\r\n    email:email,\r\n    photo:photoURL\r\n  }\r\n  setUser(signedInUser);\r\n  console.log(displayName,email,photoURL);\r\n})\r\n.catch(err =>{ \r\n  console.log(err);\r\n  console.log(err.message);\r\n})\r\n\r\n}\r\n;\r\n\r\n\r\nconst handleFbSignIn =() =>{\r\n    const auth = getAuth(app);\r\n    signInWithPopup(auth, fbProvider)\r\n  .then((result) => {\r\n    // The signed-in user info.\r\n    const user = result.user;\r\n    \r\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n    const credential = FacebookAuthProvider.credentialFromResult(result);\r\n    const accessToken = credential.accessToken;\r\n    console.log(user);\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    // Handle Errors here.\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    // The email of the user's account used.\r\n    const email = error.email;\r\n    // The AuthCredential type that was used.\r\n    const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n    console.log(errorCode,errorMessage,email,credential);\r\n\r\n    // ...\r\n  });\r\n\r\n  }"]},"metadata":{},"sourceType":"module"}